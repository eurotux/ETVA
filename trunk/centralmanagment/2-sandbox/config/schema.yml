propel:
  _attributes:
    defaultIdMethod: native
    package: lib.model
  network:
    _attributes: { phpName: EtvaNetwork }
    id: { type: INTEGER, primaryKey: true, required: true, autoIncrement: true }
    vlan_id: { type: INTEGER, required: true, foreignTable: vlan, foreignReference: id, onDelete: cascade }
    server_id: { type: INTEGER, required: true, foreignTable: server, foreignReference: id, onDelete: cascade }
    port: { type: VARCHAR, size: '255' }
    ip: { type: VARCHAR, size: '255' }
    mask: { type: VARCHAR, size: '255' }
    mac: { type: VARCHAR, size: '255' }
    target: { type: VARCHAR, size: '255' }
    intf_model: { type: VARCHAR, size: '255' }
  server:
    _attributes: { phpName: EtvaServer }
    id: { type: INTEGER, primaryKey: true, required: true, autoIncrement: true }
    cluster_id: { type: INTEGER, required: true, foreignTable: cluster, foreignReference: id, onDelete: restrict }
    name: { type: VARCHAR, size: '255', required: true }
    description: { type: LONGVARCHAR }
    ip: { type: VARCHAR, required: true }
    vnc_keymap: { type: VARCHAR, size: '10' }
    vnc_keymap_default: { type: INTEGER, required: true, default: '1' }
    uuid: { type: VARCHAR, size: '255' }
    mem: { type: VARCHAR, size: '255' }
    vcpu: { type: INTEGER }
    cpuset: { type: VARCHAR, size: '255' }
    cpu_sockets: { type: INTEGER }
    cpu_cores: { type: INTEGER }
    cpu_threads: { type: INTEGER }
    location: { type: VARCHAR, size: '255' }
    extra: { type: VARCHAR, size: '255' }
    boot: { type: VARCHAR, size: '255' }
    cdromextra: { type: VARCHAR, size: '255' }
    cdrom: { type: INTEGER, default: '0' }
    first_boot: { type: INTEGER, default: '1' }
    network_cards: { type: INTEGER }
    vm_state: { type: VARCHAR, size: '255' }
    mac_addresses: { type: LONGVARCHAR }
    created_at: { type: TIMESTAMP, required: true }
    updated_at: { type: TIMESTAMP, required: true }
    agent_tmpl: { type: VARCHAR, size: '255' }
    agent_port: { type: INTEGER }
    state: { type: INTEGER, required: true, default: '0' }
    vm_type: { type: VARCHAR, size: '255' }
    vm_os: { type: VARCHAR, size: '255' }
    autostart: { type: INTEGER, required: true, default: '0' }
    devices: { type: LONGVARCHAR }
    features: { type: VARCHAR, size: '255' }
    ga_info: { type: LONGVARCHAR }
    ga_state: { type: VARCHAR, size: '255' }
    hasHA: { type: INTEGER, default: '0' }
    priority_ha: { type: INTEGER, default: '0' }
    heartbeat: { type: TIMESTAMP }
    hbtimeout: { type: INTEGER, default: '0' }
    hblaststart: { type: TIMESTAMP }
    hbnrestarts: { type: INTEGER, default: '0' }
    hasSnapshots: { type: INTEGER, default: '0' }
    extend: { type: LONGVARCHAR }
  node:
    _attributes: { phpName: EtvaNode }
    id: { type: INTEGER, primaryKey: true, required: true, autoIncrement: true }
    cluster_id: { type: INTEGER, required: true, foreignTable: cluster, foreignReference: id, onDelete: restrict }
    name: { type: VARCHAR, size: '255', required: true }
    memtotal: { type: BIGINT }
    memfree: { type: BIGINT }
    cputotal: { type: INTEGER }
    ip: { type: VARCHAR }
    port: { type: INTEGER }
    uuid: { type: VARCHAR, size: '255' }
    storagedir: { type: LONGVARCHAR }
    network_cards: { type: INTEGER }
    state: { type: INTEGER, required: true, default: '1' }
    hypervisor: { type: VARCHAR, size: '255' }
    initialize: { type: VARCHAR, size: '255' }
    created_at: { type: TIMESTAMP, required: true }
    updated_at: { type: TIMESTAMP }
    last_keepalive: { type: TIMESTAMP }
    last_message: { type: VARCHAR, size: '255' }
    isSpareNode: { type: INTEGER, default: '0' }
    fencingconf: { type: VARCHAR, size: '255' }
  mac:
    _attributes: { phpName: EtvaMac }
    id: { type: INTEGER, primaryKey: true, required: true, autoIncrement: true }
    mac: { type: VARCHAR, size: '255' }
    in_use: { type: INTEGER, default: '0' }
  vlan:
    _attributes: { phpName: EtvaVlan }
    id: { type: INTEGER, primaryKey: true, required: true, autoIncrement: true }
    cluster_id: { type: INTEGER, required: true, foreignTable: cluster, foreignReference: id, onDelete: restrict }
    name: { type: VARCHAR, size: '255', required: true }
    tagged: { type: INTEGER, required: true, default: '0' }
    vlanid: { type: INTEGER }
    intf: { type: VARCHAR, size: '10' }
    _uniques: { vlan_index1355: [name, cluster_id], vlan_index1543: [vlanid, cluster_id] }
  physicalvolume:
    _attributes: { phpName: EtvaPhysicalvolume }
    id: { type: INTEGER, primaryKey: true, required: true, autoIncrement: true }
    cluster_id: { type: INTEGER, required: true, foreignTable: cluster, foreignReference: id, onDelete: restrict }
    uuid: { type: VARCHAR, size: '255' }
    name: { type: VARCHAR, size: '255' }
    device: { type: VARCHAR, size: '255' }
    devsize: { type: BIGINT }
    pv: { type: VARCHAR, size: '255' }
    pvsize: { type: BIGINT }
    pvfreesize: { type: BIGINT }
    pvinit: { type: INTEGER, default: '0' }
    storage_type: { type: VARCHAR, size: '255' }
    allocatable: { type: INTEGER }
    inconsistent: { type: INTEGER, required: true }
  volumegroup:
    _attributes: { phpName: EtvaVolumegroup }
    id: { type: INTEGER, primaryKey: true, required: true, autoIncrement: true }
    cluster_id: { type: INTEGER, required: true, foreignTable: cluster, foreignReference: id, onDelete: restrict }
    uuid: { type: VARCHAR, size: '255' }
    vg: { type: VARCHAR, size: '255' }
    size: { type: BIGINT }
    freesize: { type: BIGINT }
    storage_type: { type: VARCHAR, size: '255' }
    inconsistent: { type: INTEGER, required: true }
  logicalvolume:
    _attributes: { phpName: EtvaLogicalvolume }
    id: { type: INTEGER, primaryKey: true, required: true, autoIncrement: true }
    cluster_id: { type: INTEGER, required: true, foreignTable: cluster, foreignReference: id, onDelete: restrict }
    volumegroup_id: { type: INTEGER, required: true, foreignTable: volumegroup, foreignReference: id, onDelete: cascade }
    uuid: { type: VARCHAR, size: '255' }
    lv: { type: VARCHAR, size: '255' }
    lvdevice: { type: VARCHAR, size: '255' }
    size: { type: BIGINT }
    freesize: { type: BIGINT }
    virtual_size: { type: BIGINT }
    size_snapshots: { type: BIGINT }
    storage_type: { type: VARCHAR, size: '255' }
    writeable: { type: INTEGER }
    in_use: { type: INTEGER, default: '0' }
    target: { type: VARCHAR, size: '255' }
    mounted: { type: INTEGER, default: '0' }
    snapshot: { type: INTEGER, default: '0' }
    origin: { type: VARCHAR, size: '255' }
    format: { type: VARCHAR, size: '255' }
    snapshot_node_id: { type: INTEGER }
    inconsistent: { type: INTEGER, required: true }
  vnc_token:
    _attributes: { phpName: EtvaVncToken }
    username: { type: VARCHAR, size: '255', primaryKey: true, required: true }
    token: { type: VARCHAR, size: '255', required: true }
    enctoken: { type: VARCHAR, size: '255', required: true }
    updated_at: { type: TIMESTAMP }
  service:
    _attributes: { phpName: EtvaService }
    id: { type: INTEGER, primaryKey: true, required: true, autoIncrement: true }
    server_id: { type: INTEGER, required: true, foreignTable: server, foreignReference: id, onDelete: cascade }
    name_tmpl: { type: VARCHAR, size: '255' }
    description: { type: LONGVARCHAR }
    params: { type: LONGVARCHAR }
  setting:
    _attributes: { phpName: EtvaSetting }
    param: { type: VARCHAR, size: '255', primaryKey: true, required: true }
    value: { type: LONGVARCHAR }
  volume_physical:
    _attributes: { phpName: EtvaVolumePhysical }
    volumegroup_id: { type: INTEGER, primaryKey: true, required: true, foreignTable: volumegroup, foreignReference: id, onDelete: cascade }
    physicalvolume_id: { type: INTEGER, primaryKey: true, required: true, foreignTable: physicalvolume, foreignReference: id, onDelete: cascade }
  event:
    _attributes: { phpName: EtvaEvent }
    id: { type: INTEGER, primaryKey: true, required: true, autoIncrement: true }
    level: { type: INTEGER }
    message: { type: LONGVARCHAR }
    created_at: { type: TIMESTAMP }
  server_logical:
    _attributes: { phpName: EtvaServerLogical }
    server_id: { type: INTEGER, primaryKey: true, required: true, foreignTable: server, foreignReference: id, onDelete: cascade }
    logicalvolume_id: { type: INTEGER, primaryKey: true, required: true, foreignTable: logicalvolume, foreignReference: id, onDelete: cascade }
    disk_type: { type: VARCHAR, size: '255' }
    boot_disk: { type: INTEGER, default: '0' }
  node_volumegroup:
    _attributes: { phpName: EtvaNodeVolumegroup }
    node_id: { type: INTEGER, primaryKey: true, required: true, foreignTable: node, foreignReference: id, onDelete: cascade }
    volumegroup_id: { type: INTEGER, primaryKey: true, required: true, foreignTable: volumegroup, foreignReference: id, onDelete: cascade }
    inconsistent: { type: INTEGER, required: true }
  node_physicalvolume:
    _attributes: { phpName: EtvaNodePhysicalvolume }
    node_id: { type: INTEGER, primaryKey: true, required: true, foreignTable: node, foreignReference: id, onDelete: cascade }
    physicalvolume_id: { type: INTEGER, primaryKey: true, required: true, foreignTable: physicalvolume, foreignReference: id, onDelete: cascade }
    device: { type: VARCHAR, size: '255' }
    inconsistent: { type: INTEGER, required: true }
  cluster:
    _attributes: { phpName: EtvaCluster }
    id: { type: INTEGER, primaryKey: true, required: true, autoIncrement: true }
    name: { type: VARCHAR, size: '255', required: true }
    isDefaultCluster: { type: INTEGER, required: true, default: '0' }
    hasNodeHA: { type: INTEGER, required: true, default: '0' }
    admissionGate_type: { type: INTEGER, required: true, default: '0' }
    admissionGate_value: { type: INTEGER, required: true, default: '0' }
    _uniques: { cluster_index1827: [name] }
  node_logicalvolume:
    _attributes: { phpName: EtvaNodeLogicalvolume }
    node_id: { type: INTEGER, primaryKey: true, required: true, foreignTable: node, foreignReference: id, onDelete: cascade }
    logicalvolume_id: { type: INTEGER, primaryKey: true, required: true, foreignTable: logicalvolume, foreignReference: id, onDelete: cascade }
    inconsistent: { type: INTEGER, required: true }
  sessions:
    sess_id: { type: VARCHAR, size: '255', primaryKey: true, required: true }
    sess_data: { type: LONGVARCHAR }
    sess_time: { type: INTEGER }
  vnc_port:
    _attributes: { phpName: EtvaVncPort }
    id: { type: INTEGER, primaryKey: true, required: true }
    server_id: { type: INTEGER, required: true, foreignTable: server, foreignReference: id, onDelete: cascade }
    in_use: { type: INTEGER }
  server_assign:
    _attributes: { phpName: EtvaServerAssign }
    server_id: { type: INTEGER, primaryKey: true, required: true, foreignTable: server, foreignReference: id, onDelete: cascade }
    node_id: { type: INTEGER, required: true, foreignTable: node, foreignReference: id, onDelete: cascade }
  pool:
    _attributes: { phpName: EtvaPool }
    id: { type: INTEGER, primaryKey: true, required: true, autoIncrement: true }
    cluster_id: { type: INTEGER, required: true, foreignTable: cluster, foreignReference: id, onDelete: restrict }
    name: { type: VARCHAR, size: '255' }
    uuid: { type: VARCHAR, size: '255', required: true }
    pool_type: { type: VARCHAR, size: '255' }
    shared: { type: INTEGER, required: true, default: '0' }
    source_device: { type: VARCHAR, size: '255' }
    source_host: { type: VARCHAR, size: '255' }
    source_dir: { type: VARCHAR, size: '255' }
    source_format: { type: VARCHAR, size: '255' }
    target_path: { type: VARCHAR, size: '255' }
    capacity: { type: INTEGER }
    allocation: { type: INTEGER }
    available: { type: INTEGER }
  node_pool:
    _attributes: { phpName: EtvaNodePool }
    node_id: { type: INTEGER, primaryKey: true, required: true, foreignTable: node, foreignReference: id, onDelete: cascade }
    pool_id: { type: INTEGER, primaryKey: true, required: true, foreignTable: pool, foreignReference: id, onDelete: cascade }
