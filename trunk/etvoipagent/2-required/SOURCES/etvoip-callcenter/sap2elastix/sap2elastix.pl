#!/usr/bin/perl
# sap2elastix
#   this script to syncronize data from sap2elastix database contact
#       with asterisk and call center

use strict;

use utilcommon;
use utilsql;

use Data::Dumper;

my $disa_outbound_routes_file = "/etc/asterisk/etux/disa-outbound-routes.conf";

# reload asterisk
sub elastix_reload {
    system("/var/lib/asterisk/bin/retrieve_conf");
    system("/usr/sbin/asterisk -rx 'reload'");
}

sub asterisk_init_disa_outbound_routes {
    my ($disaid) = @_;
    open(DISAFH,">${disa_outbound_routes_file}");
    # [outrt-6-custom] ; DISA
    print DISAFH "; DISA rules generated by sap2elastix","\n\n";
    print DISAFH "[outrt-${disaid}-custom] ; DISA","\n";
}
my %ExistDISARoute = ();

sub asterisk_add_disa_outbound_routes {
    my ($pattern,$callerid) = @_;
    $pattern = utilcommon::toPhone($pattern);
    $callerid = utilcommon::toPhone($callerid);
=com
exten => 912345678,1,Macro(user-callerid,SKIPTTL,)
exten => 912345678/1001,1,Macro(user-callerid,SKIPTTL,)
exten => 912345678/1001,n,Noop(Calling Out Route: DISA)
exten => 912345678/1001,n,Set(MOHCLASS=${IF($["${MOHCLASS}"=""]?default:${MOHCLASS})})
exten => 912345678/1001,n,Set(_NODEST=)
exten => 912345678/1001,n,Macro(record-enable,${AMPUSER},OUT,)
exten => 912345678/1001,n,Macro(dialout-trunk,1,${EXTEN},)
exten => 912345678/1001,n,Macro(outisbusy,)
exten => 912345678/1005,1,Macro(user-callerid,SKIPTTL,)
...
=cut
    if( $pattern ){
        my $rule = "$pattern";
        $rule = "${pattern}/${callerid}" if ( $callerid );
        if( !$ExistDISARoute{"$rule"} ){
            print DISAFH 'exten => ',${pattern},',1,Macro(user-callerid,SKIPTTL,)',"\n";
            print DISAFH 'exten => ',${rule},',1,Macro(user-callerid,SKIPTTL,)',"\n";
            print DISAFH 'exten => ',${rule},',n,Noop(Calling Out Route: DISA)',"\n";
            print DISAFH 'exten => ',${rule},',n,Set(MOHCLASS=${IF($["${MOHCLASS}"=""]?default:${MOHCLASS})})',"\n";
            print DISAFH 'exten => ',${rule},',n,Set(_NODEST=)',"\n";
            print DISAFH 'exten => ',${rule},',n,Macro(record-enable,${AMPUSER},OUT,)',"\n";
            print DISAFH 'exten => ',${rule},',n,Macro(dialout-trunk,1,${EXTEN},)',"\n";
            print DISAFH 'exten => ',${rule},',n,Macro(outisbusy,)',"\n";
            $ExistDISARoute{"$rule"} = 1;
        }
    }
}
sub asterisk_end_disa_outbound_routes {
    close(DISAFH);
}

sub main {
    my %conf = utilcommon::load_conf('/usr/local/sap2elastix/config.conf');
    my ($dbhost,$dbuser,$dbpass) = ($conf{'mysql'}{'host'} || "127.0.0.1",$conf{'mysql'}{'user'} || "sap", $conf{'mysql'}{'pass'} || "123456");

    my $sapDBH = utilsql::sqlConnect("DBI:mysql:database=sap2elastix;host=$dbhost", $dbuser, $dbpass);
    my $asteriskDBH = utilsql::sqlConnect("DBI:mysql:database=asterisk;host=$dbhost", $dbuser, $dbpass);
    my $callcenterDBH = utilsql::sqlConnect("DBI:mysql:database=call_center;host=$dbhost", $dbuser, $dbpass);

    my $DISA_route_id;
    # Get outbound routes from Asterisk for DISA
    print STDERR "Get outbound routes from Asterisk for DISA","\n";
    my $c = utilsql::sqlSelect($asteriskDBH, "*", "outbound_routes",{'name'=>'DISA'});
    if( my $R = $c->fetchrow_hashref() ){
        print STDERR Dumper($R),"\n";
        if( $DISA_route_id = $R->{'route_id'} ){
            # Delete outbound routes patterns from Asterisk with DISA route_id
            print STDERR "Delete outbound routes patterns from Asterisk with DISA route_id=$DISA_route_id","\n";
            #utilsql::sqlDelete($asteriskDBH, "outbound_route_patterns",{'route_id'=>$DISA_route_id});

            # init DISA outbound routes custom file
            &asterisk_init_disa_outbound_routes($DISA_route_id);
            
        }
    }
    $c->finish();

    # Delete contact from Call Center with origen='sap'
    #print STDERR "Delete contact from Call Center with origen='sap'","\n";
    #utilsql::sqlDelete($callcenterDBH, "contact",{'origen'=>'sap'});
    # Get previous contacts from Call Center with origen='sap'
    my %contacts = ();
    my $c = utilsql::sqlSelect($callcenterDBH, "*", "contact",{'origen'=>'sap'});
    while( my $R = $c->fetchrow_hashref() ){
        if( my $phone = $R->{'telefono'} ){
            $contacts{"$phone"} = $R;
        }
    }
    $c->finish();

    # List contacts from SAP
    print STDERR "Get list contacts from SAP","\n";
    my $c = utilsql::sqlSelect($sapDBH, "*", "contacts");
    while( my $R = $c->fetchrow_hashref() ){
        my $callerid = utilcommon::trim($R->{'callerid'});
        print STDERR " Process contact client_id=$R->{'client_id'} phone=$R->{'phone'} name=$R->{'name'} callerid=$callerid","\n";
        #print STDERR Dumper($R),"\n";

        my @names = split(/\s+/,$R->{'name'});
        my $lastName = (scalar(@names)>1) ? pop (@names) : "";
        my $firstName = join(" ",@names);

        my $phone = $R->{'phone'};
        if( $contacts{"$phone"} ){
            my $id = $contacts{"$phone"}{'id'};

            # Update Call center Contant
            utilsql::sqlUpdate($callcenterDBH,"contact", { 'name'=>$firstName,
                                                            'telefono'=>$phone,
                                                            'apellido'=>$lastName,
                                                            'origen'=>'sap' },
							    { 'id'=>$id }); 
        } else {
            # Insert Call center Contant
            utilsql::sqlInsert($callcenterDBH,"contact", { 'name'=>$firstName,
                                                            'telefono'=>$phone,
                                                            'apellido'=>$lastName,
                                                            'origen'=>'sap' }); 
        }

        if( $DISA_route_id ){
            if( $callerid ){

                # Add to DISA rule outbound routes custom file
                &asterisk_add_disa_outbound_routes( $R->{'phone'}, $callerid );

                # Insert Asterisk outbound routes patterns
                #utilsql::sqlInsert($asteriskDBH,"outbound_route_patterns",{ 'route_id'=>$DISA_route_id,
                #                                                                'match_pattern_pass'=>$R->{'phone'},
                #                                                                'match_cid'=>$R->{'callerid'}
                #                                                                });
            }
        }
    }
    $c->finish();

    &asterisk_end_disa_outbound_routes();

    utilsql::sqlDisconnect($sapDBH);
    utilsql::sqlDisconnect($asteriskDBH);
    utilsql::sqlDisconnect($callcenterDBH);

    &elastix_reload();
}

&main;

1;
